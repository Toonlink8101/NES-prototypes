; This code is at some point called during the IRQ routine, whenever the sound engine is interated

; This version cuts down the waveform count to four: Pulse, Linear (saw/tri), LFSR, and Sample (Page)
; All waveforms are simulateously selected by a jump table, where the table holds all 256 possible combinations of channels
; This takes up a sizable amount of memory (6-8k), but keeps execution quick without performance drawbacks.

; Since variables are used differently by each waveform, they are all stored in a section of 21 bytes,
; where 5 bytes are assigned to each channel, and the remaining byte selects the waveforms.
; For speed, all variables are stored on the zeropage

;Waveforms:
; 00 - Pulse
; 01 - Linear
; 10 - LFSR
; 11 - Sample

; Per channel optimizations:
; - skip "adc identity_table, y" when y=0 (first channel)
; - replace "tya, adc volume" w/ "lda volume" when y=0 (first channel)
; - skip "tay" when last channel (accumulator pushed to $4011 anyway)

.segment "ZEROPAGE"
waveforms: .res 1
channel_vars: .res 20

.segment "CODE"

Iterate_channels:
;Waveform Select Jump
	; 25 cycles
	;ldy #0			; no need to clear Y, since first channel overrides it w/o reading Y
	;clc			; not always needed, should be handled after jump, if at all
	ldx waveforms
	lda jump_table_lo,x
	pha
	lda jump_table_hi,x
	pha
	;pull return address from stack
	rts

